/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as PostsAddImport } from './routes/posts/add'
import { Route as PostsPostIdImport } from './routes/posts/$postId'
import { Route as PostsCreateIndexImport } from './routes/posts/create/index'
import { Route as PostsEditPostIdImport } from './routes/posts/edit/$postId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const PostsAddRoute = PostsAddImport.update({
  id: '/posts/add',
  path: '/posts/add',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  id: '/posts/$postId',
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

const PostsCreateIndexRoute = PostsCreateIndexImport.update({
  id: '/posts/create/',
  path: '/posts/create/',
  getParentRoute: () => rootRoute,
} as any)

const PostsEditPostIdRoute = PostsEditPostIdImport.update({
  id: '/posts/edit/$postId',
  path: '/posts/edit/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/add': {
      id: '/posts/add'
      path: '/posts/add'
      fullPath: '/posts/add'
      preLoaderRoute: typeof PostsAddImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
    '/posts/edit/$postId': {
      id: '/posts/edit/$postId'
      path: '/posts/edit/$postId'
      fullPath: '/posts/edit/$postId'
      preLoaderRoute: typeof PostsEditPostIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/create/': {
      id: '/posts/create/'
      path: '/posts/create'
      fullPath: '/posts/create'
      preLoaderRoute: typeof PostsCreateIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/add': typeof PostsAddRoute
  '/posts': typeof PostsIndexRoute
  '/posts/edit/$postId': typeof PostsEditPostIdRoute
  '/posts/create': typeof PostsCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/add': typeof PostsAddRoute
  '/posts': typeof PostsIndexRoute
  '/posts/edit/$postId': typeof PostsEditPostIdRoute
  '/posts/create': typeof PostsCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/posts/add': typeof PostsAddRoute
  '/posts/': typeof PostsIndexRoute
  '/posts/edit/$postId': typeof PostsEditPostIdRoute
  '/posts/create/': typeof PostsCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/posts/$postId'
    | '/posts/add'
    | '/posts'
    | '/posts/edit/$postId'
    | '/posts/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/posts/$postId'
    | '/posts/add'
    | '/posts'
    | '/posts/edit/$postId'
    | '/posts/create'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/posts/$postId'
    | '/posts/add'
    | '/posts/'
    | '/posts/edit/$postId'
    | '/posts/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsAddRoute: typeof PostsAddRoute
  PostsIndexRoute: typeof PostsIndexRoute
  PostsEditPostIdRoute: typeof PostsEditPostIdRoute
  PostsCreateIndexRoute: typeof PostsCreateIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  PostsPostIdRoute: PostsPostIdRoute,
  PostsAddRoute: PostsAddRoute,
  PostsIndexRoute: PostsIndexRoute,
  PostsEditPostIdRoute: PostsEditPostIdRoute,
  PostsCreateIndexRoute: PostsCreateIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/posts/$postId",
        "/posts/add",
        "/posts/",
        "/posts/edit/$postId",
        "/posts/create/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/posts/$postId": {
      "filePath": "posts/$postId.tsx"
    },
    "/posts/add": {
      "filePath": "posts/add.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    },
    "/posts/edit/$postId": {
      "filePath": "posts/edit/$postId.tsx"
    },
    "/posts/create/": {
      "filePath": "posts/create/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
